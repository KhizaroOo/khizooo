@inject NavigationManager NavigationManager;

<!-- MOBILE MENU START -->
<div class="iq-top-navbar">
    <div class="iq-navbar-custom">

        <div class="iq-sidebar-logo">
            <div class="top-logo">
                <a href="index.html" class="logo">
                    <img src="logo/khizooo-logo-100.png" class="img-fluid" alt="khizooo Logo">
                </a>
            </div>
        </div>

        <div class="navbar-breadcrumb">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item breadcrumb-color">khizooo.com</li>

                    @{

                        if (CurrentModule != "")
                        {
                            <li class="breadcrumb-item breadcrumb-color active" aria-current="page">@CurrentModule</li>
                        }

                        if (CurrentPage != "")
                        {
                            <li class="breadcrumb-item breadcrumb-color active" aria-current="page">@CurrentPage</li>
                        }

                    }

                </ol>
            </nav>
        </div>

        <nav class="navbar navbar-expand-lg navbar-light p-0">
            <div class="iq-menu-bt align-self-center">
                <div class="wrapper-menu">
                    <div class="line-menu half start"></div>
                    <div class="line-menu"></div>
                    <div class="line-menu half end"></div>
                </div>
            </div>
        </nav>

    </div>
</div>
<!-- MOBILE MENU END -->

@code {
    string CurrentModule = "";
    string CurrentPage = "";

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
        UpdateCurrentPage();
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        UpdateCurrentPage();
        InvokeAsync(StateHasChanged);
    }

    private void UpdateCurrentPage()
    {
        var currentModule = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        var uri = new Uri(NavigationManager.Uri);
        var segments = uri.Segments;
        currentModule = segments.Length > 1 ? segments[1].Replace("/", "") : "";
        CurrentPage = segments.Length > 2 ? segments[2].Replace("/", "") : "";

        if (string.IsNullOrEmpty(currentModule) || currentModule == "index") { CurrentModule = "Landing Page"; }
        else if (currentModule == "portfolio") { CurrentModule = "Portfolio"; }
        else if (currentModule == "artworks") { CurrentModule = "Artworks"; }
        else if (currentModule == "infographics") { CurrentModule = "Infographics"; }
        else if (currentModule == "webtools") { CurrentModule = "WebTools"; }
        else if (currentModule == "freebies") { CurrentModule = "Freebies"; }
        else if (currentModule == "converters") { CurrentModule = "Converters"; }
        else if (currentModule == "calculators") { CurrentModule = "Calculators"; }
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}