@page "/calculators/finance-calculators/simple-interest-calculator"

@inject NavigationManager NavigationManager
@inject HttpClient Http

@using System.Text.Json
@using Microsoft.AspNetCore.Components.Web
@using khizooo.AppData.SharedHelper;
@using khizooo.AppData;
@using khizooo.Pages.PartialViews

<PageTitle>Khizooo - Calculators - Simple Interest</PageTitle>

<style>
    .calculator-asset:hover .iq-card {
        background: #9ad6d4;
    }

    .timeline {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        margin-top: 20px;
        position: relative;
    }

    .timeline-dot {
        position: relative;
        text-align: center;
        flex: 1;
    }

    .year-label {
        font-weight: bold;
        margin-bottom: 5px;
        color: #6f42c1;
    }

    .value-label {
        font-size: 12px;
        margin-top: 5px;
        color: #333;
    }

    .bar-row {
        display: flex;
        align-items: center;
        margin: 0.5rem 0;
    }

    .bar-label {
        width: 70px;
        font-size: 0.85rem;
        color: #374151;
    }

    .bar-track {
        flex: 1;
        background: #e5e7eb;
        border-radius: 6px;
        overflow: hidden;
        display: flex;
    }

    .bar-invested {
        background: #2563eb;
        height: 12px;
    }

    .bar-returns {
        background: #16a34a;
        height: 12px;
    }

    .progress-wrap {
        margin: 1rem 0;
    }

    .progress-bar {
        background: #e5e7eb;
        border-radius: 8px;
        height: 14px;
        overflow: hidden;
    }

    .progress-invested {
        background: #2563eb;
        height: 100%;
        transition: width 1s ease;
    }

    .progress-returns {
        background: #16a34a;
        height: 100%;
        transition: width 1s ease;
    }

    .card-header {
        background-color: rgb(154 214 212);
        font-weight: 600;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

        .card-header .nav-pills .nav-link {
            min-height: 15px;
            display: flex;
            align-items: center;
            font-size: 0.8rem;
            padding: 0 0.5rem;
            border-radius: 5px;
            margin: 0;
        }

            .card-header .nav-pills .nav-link.active {
                color: #000000;
                background-color: #ffdd44;
            }
</style>

<div id="content-page" class="content-page">
    <div id="Right-Page-Content" class="container-fluid">

        <div class="row mb-5">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 align-self-center text-center">
                <div class="iq-card sb-top-banner-card iq-card-block iq-card-stretch iq-card-height p-2" style="background:#9ad6d4">
                    <div class="iq-card-body pb-5 pt-5">
                        <div class="row justify-content-center align-items-center">
                            <div class="col-7 align-self-center text-left">
                                <h4 class="mb-2">
                                    <a href="/calculators/finance-calculators" class="text-dark" style="text-decoration:none;">
                                        <i class="ri-arrow-left-fill"></i> FINANCE CALCULATORS
                                    </a>
                                </h4>
                                <h1 class="mb-2">Simple Interest Calculator</h1>
                                <p class="mb-2">Calculate your simple interest, total returns, and maturity value with ease.</p>
                            </div>
                            <div class="col-4 align-self-center text-right"><SocialMedia /></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- LEFT: Forms -->
            <div class="col-lg-3 mb-4">
                <div class="card sticky-col">
                    <div class="card-header text-dark">Simple Interest Calculator</div>
                    <div class="card-body">
                        <div class="tab-content" id="calcContent">
                            <div class="tab-pane fade show active" id="simpleinterest" role="tabpanel" aria-labelledby="simpleinterest-tab">
                                <div class="form-group">
                                    <label>Currency</label>
                                    <select id="currency" class="form-control calculator-input-bcg">
                                        <option value="AUD">AUD - Australian Dollar</option>
                                        <option value="BGN">BGN - Bulgarian Lev</option>
                                        <option value="BRL">BRL - Brazilian Real</option>
                                        <option value="CAD">CAD - Canadian Dollar</option>
                                        <option value="CHF">CHF - Swiss Franc</option>
                                        <option value="CNY">CNY - Chinese Yuan</option>
                                        <option value="CZK">CZK - Czech Koruna</option>
                                        <option value="DKK">DKK - Danish Krone</option>
                                        <option value="EUR">EUR - Euro</option>
                                        <option value="GBP">GBP - British Pound</option>
                                        <option value="HKD">HKD - Hong Kong Dollar</option>
                                        <option value="HRK">HRK - Croatian Kuna</option>
                                        <option value="HUF">HUF - Hungarian Forint</option>
                                        <option value="IDR">IDR - Indonesian Rupiah</option>
                                        <option value="ILS">ILS - Israeli Shekel</option>
                                        <option value="INR">INR - Indian Rupee</option>
                                        <option value="ISK">ISK - Icelandic Krona</option>
                                        <option value="JPY">JPY - Japanese Yen</option>
                                        <option value="KRW">KRW - South Korean Won</option>
                                        <option value="MXN">MXN - Mexican Peso</option>
                                        <option value="MYR">MYR - Malaysian Ringgit</option>
                                        <option value="NOK">NOK - Norwegian Krone</option>
                                        <option value="NZD">NZD - New Zealand Dollar</option>
                                        <option value="PHP">PHP - Philippine Peso</option>
                                        <option value="PLN">PLN - Polish Zloty</option>
                                        <option value="RON">RON - Romanian Leu</option>
                                        <option value="RUB">RUB - Russian Ruble</option>
                                        <option value="SEK">SEK - Swedish Krona</option>
                                        <option value="SGD">SGD - Singapore Dollar</option>
                                        <option value="THB">THB - Thai Baht</option>
                                        <option value="TRY">TRY - Turkish Lira</option>
                                        <option value="USD" selected>USD - US Dollar</option>
                                        <option value="ZAR">ZAR - South African Rand</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Principal Amount</label>
                                    <input type="number" min="0" step="100" class="form-control calculator-input-bcg" id="siPrincipal" value="10000">
                                </div>
                                <div class="form-group">
                                    <label>Interest Rate (% per year)</label>
                                    <input type="number" min="0" max="100" step="0.1" class="form-control calculator-input-bcg" id="siRate" value="8">
                                </div>
                                <div class="form-group">
                                    <label>Time Period (Years)</label>
                                    <input type="number" min="1" step="1" class="form-control calculator-input-bcg" id="siYears" value="5">
                                </div>
                            </div>
                            <hr />
                            <h5 class="mt-4">How to Use the Simple Interest Calculator?</h5>
                            <p>Enter the principal amount, interest rate per year, and time period in years. The calculator will instantly show your interest earned and maturity value.</p>
                            <h5 class="mt-4">Understanding the Results</h5>
                            <p>The calculator displays your initial investment, total simple interest earned, and the maturity value (principal + interest). This helps you plan your investments and savings better.</p>
                            <h5 class="mt-4">Benefits of Simple Interest Calculation</h5>
                            <ul class="p-0">
                                <li>1: Quick and easy calculation</li>
                                <li>2: Useful for short-term deposits and loans</li>
                                <li>3: Transparent and predictable returns</li>
                                <li>4: Helps compare different investment options</li>
                                <li>5: No compounding, so interest is straightforward</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- RIGHT: Results -->
            <div class="col-lg-9">

                <div class="row">
                    <div class="col-12">
                        <div class="card chart-card mb-4">
                            <div class="card-header text-dark">Overall Summary</div>
                            <div class="card-body pb-0">
                                <div class="row" id="summaryRow"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="card chart-card mb-4">
                            <div class="card-header text-dark">Growth Over Time</div>
                            <div class="card-body">
                                <div id="lineChart"></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-6">
                        <div class="card chart-card mb-4">
                            <div class="card-header text-dark">Yearly Investment vs Returns</div>
                            <div class="card-body">
                                <div id="barChart"></div>
                            </div>
                        </div>
                        <div class="card chart-card mb-4">
                            <div class="card-header text-dark">Final Portfolio Breakdown</div>
                            <div class="card-body">
                                <div id="pieChart"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between text-dark">
                                <span>Growth Breakdown</span>
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" data-toggle="pill" href="#yearly">Yearly</a></li>
                                    <li class="nav-item"><a class="nav-link" data-toggle="pill" href="#monthly">Monthly</a></li>
                                </ul>
                            </div>
                            <div class="card-body tab-content">
                                <div class="tab-pane fade show active" id="yearly">
                                    <table class="table table-sm" id="yearlyTable"></table>
                                </div>
                                <div class="tab-pane fade" id="monthly">
                                    <table class="table table-sm" id="monthlyTable"></table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12">
                        <div class="card chart-card mb-4">
                            <div class="card-header text-dark">Simple Interest Calculator FAQs</div>
                            <div class="card-body">
                                <div class="faq">
                                    <ul class="faq-list">
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq1" aria-expanded="false">
                                                What is Simple Interest? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq1" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Simple interest is a way to calculate interest where the interest is always calculated on the original principal amount.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq2" aria-expanded="false">
                                                How is simple interest calculated? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq2" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Simple Interest = Principal × Rate × Time / 100. The maturity value is Principal + Simple Interest.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq3" aria-expanded="false">
                                                Where is simple interest used? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq3" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    It is commonly used for short-term loans, fixed deposits, and some types of bonds.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq4" aria-expanded="false">
                                                Can I use this calculator for compound interest? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq4" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    No, this calculator is for simple interest only. For compounding, use a compound interest calculator.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq5" aria-expanded="false">
                                                Is the result accurate? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq5" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Yes, for simple interest scenarios. For investments with compounding, use the appropriate calculator.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq6" aria-expanded="false">
                                                What is the formula for simple interest? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq6" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Simple Interest = Principal × Rate × Time / 100.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq7" aria-expanded="false">
                                                Can I use this for recurring deposits? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq7" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    This calculator is for one-time principal only. For recurring deposits, use a recurring deposit calculator.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq8" aria-expanded="false">
                                                Does the interest change every year? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq8" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    No, interest is always calculated on the original principal, so it remains the same each year.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq9" aria-expanded="false">
                                                Can I use this for loans? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq9" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Yes, simple interest is often used for short-term loans and advances.
                                                </p>
                                            </div>
                                        </li>
                                        <li>
                                            <a data-toggle="collapse" class="collapsed" href="#faq10" aria-expanded="false">
                                                What is the difference between simple and compound interest? <i class="ri-arrow-up-box-line"></i>
                                            </a>
                                            <div id="faq10" class="collapse" data-parent=".faq-list">
                                                <p>
                                                    Simple interest is calculated only on the principal, while compound interest is calculated on principal plus accumulated interest.
                                                </p>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<script>
    if (typeof currencySymbols === "undefined") {
        var currencySymbols = {
            AUD:"A$", BGN:"лв", BRL:"R$", CAD:"C$", CHF:"Fr", CNY:"¥", CZK:"Kč", DKK:"kr", EUR:"€", GBP:"£", HKD:"HK$", HRK:"kn", HUF:"Ft", IDR:"Rp", ILS:"₪", INR:"₹", ISK:"kr", JPY:"¥", KRW:"₩", MXN:"$", MYR:"RM", NOK:"kr", NZD:"NZ$", PHP:"₱", PLN:"zł", RON:"lei", RUB:"₽", SEK:"kr", SGD:"S$", THB:"฿", TRY:"₺", USD:"$", ZAR:"R"
        };
    }
    if (typeof fxRates === "undefined") {
        var fxRates = {};
    }
    if (typeof FREECURRENCYAPI_KEY === "undefined") {
        var FREECURRENCYAPI_KEY = "fca_live_PhuNI0BSRHJ51gnrB1fMEABX0hiQ1ZKSIaNa34ZW";
    }

    async function fetchFxRates(base="USD") {
        try {
            const cached = localStorage.getItem("fxRates");
            const expiry = localStorage.getItem("fxRates_expiry");
            if (cached && expiry && Date.now() < +expiry) {
                fxRates = JSON.parse(cached);
                return;
            }
            const url = `https://api.freecurrencyapi.com/v1/latest?apikey=${FREECURRENCYAPI_KEY}`;
            const res = await fetch(url);
            const data = await res.json();
            fxRates = data.data || {};
            fxRates[base] = 1;
            localStorage.setItem("fxRates", JSON.stringify(fxRates));
            localStorage.setItem("fxRates_expiry", Date.now() + 24*60*60*1000);
        } catch (e) {
            fxRates = {USD:1};
        }
    }

    function calcSimpleInterest(P, R, T) {
        const interest = P * R * T / 100;
        const maturity = P + interest;
        const labelsY = [], invY = [], intY = [], matY = [];
        for (let y = 1; y <= T; y++) {
            const yearlyInterest = P * R * y / 100;
            labelsY.push("Year " + y);
            invY.push(P);
            intY.push(yearlyInterest);
            matY.push(P + yearlyInterest);
        }
        // Monthly breakdown
        const labelsM = [], invM = [], intM = [], matM = [];
        for (let m = 1; m <= T * 12; m++) {
            const monthInterest = P * R * (m / 12) / 100;
            labelsM.push("M" + m);
            invM.push(P);
            intM.push(monthInterest);
            matM.push(P + monthInterest);
        }
        return { principal: P, rate: R, years: T, interest, maturity, labelsY, invY, intY, matY, labelsM, invM, intM, matM };
    }

    function format(num, sym) { return sym + " " + num.toLocaleString(undefined, {maximumFractionDigits:2}); }

       function renderSummary(res, sym) {
        const row = document.getElementById("summaryRow"); row.innerHTML = "";

        // Calculated metrics
        const interestToPrincipalRatio = res.principal === 0 ? 0 : (res.interest / res.principal) * 100;
        const annualInterest = res.years === 0 ? 0 : res.interest / res.years;
        const higherRateInterest = res.principal * 7 * res.years / 100;
        const higherRateImpact = higherRateInterest - res.interest;
        const doublePrincipal = res.principal * 2;
        const doublePrincipalInterest = doublePrincipal * res.rate * res.years / 100;

        const cards = [
            { label: "Principal Amount (Initial Investment)", val: format(res.principal, sym), w: "col-4" },
            { label: "Interest Earned (Simple Interest)", val: format(res.interest, sym), w: "col-4" },
            { label: "Total Amount (Principal + Interest)", val: format(res.maturity, sym), w: "col-4" },
            { label: "Interest to Principal Ratio", val: `The total interest earned is ${interestToPrincipalRatio.toFixed(1)}% of your principal amount`, w: "col-6" },
            { label: "Annual Interest Earning", val: `You earn approximately ${format(annualInterest, sym)} per year`, w: "col-6" },
            { label: "Higher Rate Impact", val: `At 7% rate, you could earn ${format(higherRateImpact, sym)} more in interest`, w: "col-6" },
            { label: "Double Principal Impact", val: `Doubling your principal to ${format(doublePrincipal, sym)} would earn you ${format(doublePrincipalInterest, sym)} in interest`, w: "col-6" }
        ];
        cards.forEach(c => {
            row.innerHTML += `
            <div class='${c.w}'>
                <div class='card iq-mb-3 bg-calculators p-1' style="padding:0.7rem">
                    <div class='card-body text-dark text-center p-1'>
                        <span class="text-bold">${c.label}</span>
                    </div>
                    <div class='card-footer text-center p-1'><h6 class="text-dark">${c.val}</h6></div>
                </div>
            </div>`;
        });
    }

    function renderTable(id, labels, inv, int, mat, sym) {
        const t = document.getElementById(id);
        let html = "<tr><th>Period</th><th>Principal</th><th>Interest Accrued</th><th>Maturity Value</th></tr>";
        labels.forEach((l, i) => {
            html += `<tr><td>${l}</td><td>${format(inv[i], sym)}</td><td>${format(int[i], sym)}</td><td>${format(mat[i], sym)}</td></tr>`;
        });
        t.innerHTML = html;
    }

    function makeCharts(res, sym) {
        document.getElementById("lineChart").innerHTML = "";
        document.getElementById("barChart").innerHTML = "";
        document.getElementById("pieChart").innerHTML = "";

        // Growth Over Time (Timeline)
        const lineWrap = document.getElementById("lineChart"); lineWrap.innerHTML = "";
        const timeline = document.createElement("div"); timeline.className = "timeline";
        res.labelsY.forEach((year, i) => {
            const dot = document.createElement("div");
            dot.className = "timeline-dot ";
            const yearLabel = document.createElement("div");
            yearLabel.className = "year-label";
            yearLabel.innerText = `${i + 1}Y`;
            const valueLabel = document.createElement("div");
            valueLabel.className = "value-label";
            valueLabel.innerText = `${sym} ${res.matY[i].toLocaleString(undefined, {maximumFractionDigits:2})}`;
            dot.appendChild(yearLabel);
            dot.appendChild(valueLabel);
            timeline.appendChild(dot);
        });
        lineWrap.appendChild(timeline);

        // Yearly Investment vs Returns (Bar)
        const barWrap = document.getElementById("barChart");
        res.labelsY.forEach((year, i) => {
            const row = document.createElement("div");
            row.className = "bar-row";
            row.innerHTML = `
                <div class="bar-label">${year}</div>
                <div class="bar-track">
                    <div class="bar-invested" style="width:${(res.invY[i]/res.matY[res.matY.length-1])*100}%"></div>
                    <div class="bar-returns" style="width:${(res.intY[i]/res.matY[res.matY.length-1])*100}%"></div>
                </div>
            `;
            barWrap.appendChild(row);
        });

        // Final Portfolio Breakdown (Pie/Progress)
        const pieWrap = document.getElementById("pieChart");
        const total = res.maturity;
        const investedPercent = ((res.principal / total) * 100).toFixed(1);
        const returnsPercent = ((res.interest / total) * 100).toFixed(1);
        pieWrap.innerHTML += `
            <div class="progress-wrap">
                <span>Principal: ${sym} ${res.principal.toLocaleString(undefined, {maximumFractionDigits:2})} (${investedPercent}%)</span>
                <div class="progress-bar">
                    <div class="progress-invested" style="width:${investedPercent}%"></div>
                </div>
            </div>
            <div class="progress-wrap">
                <span>Interest: ${sym} ${res.interest.toLocaleString(undefined, {maximumFractionDigits:2})} (${returnsPercent}%)</span>
                <div class="progress-bar">
                    <div class="progress-returns" style="width:${returnsPercent}%"></div>
                </div>
            </div>
        `;
    }

    async function compute() {
        const P = +document.getElementById("siPrincipal").value || 0;
        const R = +document.getElementById("siRate").value || 0;
        const T = +document.getElementById("siYears").value || 0;
        const curr = document.getElementById("currency").value;
        if (!fxRates[curr]) await fetchFxRates("USD");
        const factor = fxRates[curr] || 1, sym = currencySymbols[curr] || curr;
        const res = calcSimpleInterest(P, R, T);
        // Convert all currency values
        res.principal *= factor;
        res.interest *= factor;
        res.maturity *= factor;
        res.invY = res.invY.map(v => v * factor);
        res.intY = res.intY.map(v => v * factor);
        res.matY = res.matY.map(v => v * factor);
        res.invM = res.invM.map(v => v * factor);
        res.intM = res.intM.map(v => v * factor);
        res.matM = res.matM.map(v => v * factor);
        renderSummary(res, sym);
        renderTable("yearlyTable", res.labelsY, res.invY, res.intY, res.matY, sym);
        renderTable("monthlyTable", res.labelsM, res.invM, res.intM, res.matM, sym);
        makeCharts(res, sym);
    }

    ["siPrincipal", "siRate", "siYears", "currency"].forEach(id => {
      document.getElementById(id).addEventListener("input",compute);
    });

    fetchFxRates("USD").then(compute);
</script>

@code {
    SharedHelper SH = new SharedHelper();
    KhizoOo Me = new KhizoOo();

    public string Principal { get; set; } = "0";
    public string Interest { get; set; } = "0";
    public string Maturity { get; set; } = "0";

    public void CalculateStats()
    {
        Principal = "$10,000";
        Interest = "$4,000";
        Maturity = "$14,000";
    }

    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    protected override void OnInitialized()
    {
        CalculateStats();
    }

    protected override async Task OnParametersSetAsync() { }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // await JSRuntime.InvokeVoidAsync("LoadScripts", "js/chart.min.js");
        }
        catch (Exception ex) { Console.WriteLine($"Error loading or calling script: {ex.Message}"); }
    }
}