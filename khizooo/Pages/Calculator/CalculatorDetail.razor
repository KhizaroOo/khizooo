@page "/calculators/{slug}"

@inject NavigationManager NavigationManager
@inject HttpClient Http

@using System.Text.Json
@using khizooo.AppData.SharedHelper;
@using khizooo.AppData;
@using khizooo.Pages.PartialViews

<PageTitle>Calculators</PageTitle>


<style>
    .grid-container {
        columns: 6 200px;
        column-gap: 1.5rem;
        width: 90%;
        margin: 0 auto;
    }

        .grid-container .Art-Piece {
            width: 150px;
            margin: 0 1.5rem 1.5rem 0;
            display: inline-block;
            width: 100%;
            border: solid 4px black;
            padding: 5px;
            box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);
            border-radius: 5px;
            transition: all 0.25s ease-in-out;
        }

            .grid-container .Art-Piece:hover img {
                filter: grayscale(0);
            }

            .grid-container .Art-Piece:hover {
                border-color: #ffd100;
                box-shadow: 0px 0px 15px #ffd100;
            }

            .grid-container .Art-Piece img {
                width: 100%;
                filter: grayscale(100%);
                border-radius: 5px;
                transition: all 0.25s ease-in-out;
            }

    .modal-img {
        width: 100%;
        border-radius: 0;
    }

    .calculator-asset:hover .iq-card {
        background: #9ad6d4;
    }
</style>


<div id="content-page" class="content-page">
    <div id="Right-Page-Content" class="container-fluid">

        <div class="row mb-5">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 align-self-center text-center">
                <div class="iq-card sb-top-banner-card iq-card-block iq-card-stretch iq-card-height p-2" style="background:#9ad6d4">
                    <div class="iq-card-body pb-5 pt-5">
                        <div class="row justify-content-center align-items-center">
                            <div class="col-7 align-self-center text-left">
                                <h1 class="mb-2">@((MarkupString)calculator.Title.ToUpper())</h1>
                                <p class="mb-2">@((MarkupString)calculator.Description)</p>
                            </div>
                            <div class="col-4 align-self-center text-right"><SocialMedia /></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
                @foreach (var item in JsonItems)
                {

                    var name = item.ContainsKey("name") ? item["name"]?.ToString() : "";
                    var description = item.ContainsKey("description") ? item["description"]?.ToString() : "";
                    var icon = item.ContainsKey("icon") ? item["icon"]?.ToString() : "";
                    var url = item.ContainsKey("url") ? item["url"]?.ToString() : "";

                <div class="col-4" data-url="@url">
                    <a class="calculator-asset" href="@((MarkupString)url)">
                        <div class="iq-card dash-hover-gradient iq-card-block iq-card-stretch iq-card-height">
                            <div class="iq-card-header border-0">
                                <div class="mb-0 font-size-32 text-dark">@((MarkupString)icon)</div>
                            </div>
                            <div class="iq-card-body pt-1 pb-4">
                                    <h5 class="mb-1">@((MarkupString)name)</h5>
                                    <p class="" style="color: #363636;">@((MarkupString)description)</p>
                                </div>
                            </div>
                        </a>
                    </div>
                }
        </div>

    </div>
</div>

@code {
    [Parameter]
    public string Slug { get; set; } = "";
    List<Dictionary<string, object>> JsonItems = new List<Dictionary<string, object>>();

    SharedHelper SH = new SharedHelper();
    KhizoOo Me = new KhizoOo();
    AppData.Calculator calculator;


    protected override void OnInitialized()
    {
        calculator = new MyCalculators().GetMyCalculators(1000).Where(X => X.Slug == Slug.ToString()).FirstOrDefault();
    }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine($"Loading JSON for Slug: {Slug}");

        if (!string.IsNullOrWhiteSpace(Slug))
        {
            var jsonPath = $"json/online-calculators/{Slug}.json";
            try
            {
                var json = await Http.GetStringAsync(jsonPath);
                var doc = JsonDocument.Parse(json);
                foreach (var element in doc.RootElement.EnumerateArray())
                {
                    var dict = new Dictionary<string, object>();
                    foreach (var prop in element.EnumerateObject())
                    {
                        dict[prop.Name] = prop.Value.ToString();
                    }
                    JsonItems.Add(dict);
                }
            }
            catch
            {
               // JsonItems = new List<Dictionary<string, object>>();
            }
        }
    }
}